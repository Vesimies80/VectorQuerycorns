services:
  traefik:
    image: "traefik:v3.4"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`vectorquerycorns.org`)&&PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.routers.backend.middlewares=api-stripprefix"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /code/backend
        - action: rebuild
          path: requirements.json
  ui:
    build:
      context: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontent.rule=Host(`vectorquerycorns.org`)&&!PathPrefix(`/api`)"
      - "traefik.http.routers.frontent.entrypoints=websecure"
      - "traefik.http.routers.frontent.tls.certresolver=myresolver"
    develop:
      watch:
        - action: rebuild
          path: ./frontend
          target: /work

